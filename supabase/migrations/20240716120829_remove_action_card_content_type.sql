
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pg_net" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

CREATE SCHEMA IF NOT EXISTS "public";

ALTER SCHEMA "public" OWNER TO "pg_database_owner";

COMMENT ON SCHEMA "public" IS 'standard public schema';

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."accessory" (
    "id" smallint NOT NULL,
    "name" character varying NOT NULL
);

ALTER TABLE "public"."accessory" OWNER TO "postgres";

ALTER TABLE "public"."accessory" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."accessory_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."action_card" (
    "id" bigint NOT NULL,
    "name" character varying NOT NULL
);

ALTER TABLE "public"."action_card" OWNER TO "postgres";

ALTER TABLE "public"."action_card" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."action_card_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."action_card_settings" (
    "id" integer NOT NULL,
    "game_id" integer NOT NULL,
    "state_id" smallint NOT NULL,
    "card_limit" smallint,
    "card_seconds" smallint,
    "is_auto_next" boolean,
    "is_player_creative" boolean,
    "prompt" character varying
);

ALTER TABLE "public"."action_card_settings" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."action_card_settings_has_action_card" (
    "id" bigint NOT NULL,
    "action_card_settings_id" integer NOT NULL,
    "action_card_id" bigint NOT NULL
);

ALTER TABLE "public"."action_card_settings_has_action_card" OWNER TO "postgres";

ALTER TABLE "public"."action_card_settings_has_action_card" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."action_card_settings_has_action_card_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE "public"."action_card_settings" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."action_card_settings_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."action_card_state" (
    "id" smallint NOT NULL,
    "name" character varying NOT NULL
);

ALTER TABLE "public"."action_card_state" OWNER TO "postgres";

ALTER TABLE "public"."action_card_state" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."action_card_state_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."challenge" (
    "id" integer NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "message" "text" NOT NULL
);

ALTER TABLE "public"."challenge" OWNER TO "postgres";

ALTER TABLE "public"."challenge" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."challenge_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."game" (
    "id" integer NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "min_players" smallint DEFAULT '2'::smallint NOT NULL,
    "max_players" smallint,
    "activity_level" smallint DEFAULT '0'::smallint NOT NULL,
    "minutes" smallint DEFAULT '0'::smallint NOT NULL,
    "player_group_type_id" smallint,
    "game_category_id" smallint NOT NULL,
    "descriptions" "text"[] NOT NULL,
    "intro_description" "text",
    "name" character varying NOT NULL,
    "game_audience_id" smallint,
    "drunk_level" smallint DEFAULT '0'::smallint NOT NULL
);

ALTER TABLE "public"."game" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."game_audience" (
    "id" smallint NOT NULL,
    "name" character varying NOT NULL
);

ALTER TABLE "public"."game_audience" OWNER TO "postgres";

ALTER TABLE "public"."game_audience" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."game_audience_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."game_category" (
    "id" smallint NOT NULL,
    "name" character varying NOT NULL
);

ALTER TABLE "public"."game_category" OWNER TO "postgres";

ALTER TABLE "public"."game_category" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."game_category_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."game_has_accessory" (
    "id" integer NOT NULL,
    "game_id" integer NOT NULL,
    "accessory_id" smallint NOT NULL
);

ALTER TABLE "public"."game_has_accessory" OWNER TO "postgres";

ALTER TABLE "public"."game_has_accessory" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."game_has_accessory_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."game_has_game_type" (
    "id" integer NOT NULL,
    "game_id" integer NOT NULL,
    "game_type_id" smallint NOT NULL
);

ALTER TABLE "public"."game_has_game_type" OWNER TO "postgres";

ALTER TABLE "public"."game_has_game_type" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."game_has_game_type_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE "public"."game" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."game_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."game_type" (
    "id" smallint NOT NULL,
    "name" character varying NOT NULL
);

ALTER TABLE "public"."game_type" OWNER TO "postgres";

ALTER TABLE "public"."game_type" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."game_type_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."player" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "username" character varying NOT NULL,
    "first_name" character varying,
    "last_name" character varying,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp with time zone,
    "is_guest" boolean DEFAULT true NOT NULL,
    "deleted_at" timestamp with time zone
);

ALTER TABLE "public"."player" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."player_group_type" (
    "id" smallint NOT NULL,
    "name" character varying NOT NULL
);

ALTER TABLE "public"."player_group_type" OWNER TO "postgres";

ALTER TABLE "public"."player_group_type" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."player_group_type_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."player_has_room" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "is_host" boolean DEFAULT false NOT NULL,
    "room_id" "text" NOT NULL,
    "player_id" "uuid" NOT NULL
);

ALTER TABLE "public"."player_has_room" OWNER TO "postgres";

ALTER TABLE "public"."player_has_room" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."player_has_room_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE OR REPLACE VIEW "public"."random_challenge" AS
 SELECT "challenge"."id",
    "challenge"."created_at",
    "challenge"."message"
   FROM "public"."challenge"
  ORDER BY ("random"());

ALTER TABLE "public"."random_challenge" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."room" (
    "id" "text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "max_players" smallint NOT NULL
);

ALTER TABLE "public"."room" OWNER TO "postgres";

ALTER TABLE ONLY "public"."accessory"
    ADD CONSTRAINT "accessory_name_unique" UNIQUE ("name");

ALTER TABLE ONLY "public"."accessory"
    ADD CONSTRAINT "accessory_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."action_card"
    ADD CONSTRAINT "action_card_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."action_card_settings_has_action_card"
    ADD CONSTRAINT "action_card_settings_has_action_card_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."action_card_settings"
    ADD CONSTRAINT "action_card_settings_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."action_card_state"
    ADD CONSTRAINT "action_card_state_name_key" UNIQUE ("name");

ALTER TABLE ONLY "public"."action_card_state"
    ADD CONSTRAINT "action_card_state_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."challenge"
    ADD CONSTRAINT "challenge_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."game_has_accessory"
    ADD CONSTRAINT "game_accessory_unique" UNIQUE ("game_id", "accessory_id");

ALTER TABLE ONLY "public"."game_audience"
    ADD CONSTRAINT "game_audience_type_name_key" UNIQUE ("name");

ALTER TABLE ONLY "public"."game_audience"
    ADD CONSTRAINT "game_audience_type_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."game_category"
    ADD CONSTRAINT "game_category_name_key" UNIQUE ("name");

ALTER TABLE ONLY "public"."game_category"
    ADD CONSTRAINT "game_category_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."game_has_accessory"
    ADD CONSTRAINT "game_has_accessory_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."game_has_game_type"
    ADD CONSTRAINT "game_has_game_type_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."game_has_game_type"
    ADD CONSTRAINT "game_has_game_type_unique" UNIQUE ("game_id", "game_type_id");

ALTER TABLE ONLY "public"."game"
    ADD CONSTRAINT "game_name_unique" UNIQUE ("name");

ALTER TABLE ONLY "public"."game"
    ADD CONSTRAINT "game_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."game_type"
    ADD CONSTRAINT "game_type_name_unique" UNIQUE ("name");

ALTER TABLE ONLY "public"."game_type"
    ADD CONSTRAINT "game_type_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."player_group_type"
    ADD CONSTRAINT "player_group_type_name_unique" UNIQUE ("name");

ALTER TABLE ONLY "public"."player_has_room"
    ADD CONSTRAINT "player_has_room_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."player"
    ADD CONSTRAINT "player_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."player_group_type"
    ADD CONSTRAINT "player_type_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."player"
    ADD CONSTRAINT "player_username_key" UNIQUE ("username");

ALTER TABLE ONLY "public"."room"
    ADD CONSTRAINT "room_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."action_card_settings"
    ADD CONSTRAINT "public_action_card_settings_game_id_fkey" FOREIGN KEY ("game_id") REFERENCES "public"."game"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."action_card_settings_has_action_card"
    ADD CONSTRAINT "public_action_card_settings_has_action_card_action_card_id_fkey" FOREIGN KEY ("action_card_id") REFERENCES "public"."action_card"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."action_card_settings_has_action_card"
    ADD CONSTRAINT "public_action_card_settings_has_action_card_action_card_setting" FOREIGN KEY ("action_card_settings_id") REFERENCES "public"."action_card_settings"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."action_card_settings"
    ADD CONSTRAINT "public_action_card_settings_state_id_fkey" FOREIGN KEY ("state_id") REFERENCES "public"."action_card_state"("id") ON UPDATE CASCADE ON DELETE SET NULL;

ALTER TABLE ONLY "public"."game"
    ADD CONSTRAINT "public_game_game_audience_id_fkey" FOREIGN KEY ("game_audience_id") REFERENCES "public"."game_audience"("id") ON UPDATE CASCADE ON DELETE SET NULL;

ALTER TABLE ONLY "public"."game"
    ADD CONSTRAINT "public_game_game_category_id_fkey" FOREIGN KEY ("game_category_id") REFERENCES "public"."game_category"("id") ON UPDATE CASCADE ON DELETE SET NULL;

ALTER TABLE ONLY "public"."game_has_accessory"
    ADD CONSTRAINT "public_game_has_accessory_accessory_id_fkey" FOREIGN KEY ("accessory_id") REFERENCES "public"."accessory"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."game_has_accessory"
    ADD CONSTRAINT "public_game_has_accessory_game_id_fkey" FOREIGN KEY ("game_id") REFERENCES "public"."game"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."game_has_game_type"
    ADD CONSTRAINT "public_game_has_game_type_game_id_fkey" FOREIGN KEY ("game_id") REFERENCES "public"."game"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."game_has_game_type"
    ADD CONSTRAINT "public_game_has_game_type_game_type_id_fkey" FOREIGN KEY ("game_type_id") REFERENCES "public"."game_type"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."game"
    ADD CONSTRAINT "public_game_player_group_type_id_fkey" FOREIGN KEY ("player_group_type_id") REFERENCES "public"."player_group_type"("id") ON UPDATE CASCADE ON DELETE SET NULL;

ALTER TABLE ONLY "public"."player_has_room"
    ADD CONSTRAINT "public_player_has_room_player_id_fkey" FOREIGN KEY ("player_id") REFERENCES "public"."player"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."player_has_room"
    ADD CONSTRAINT "public_player_has_room_room_id_fkey" FOREIGN KEY ("room_id") REFERENCES "public"."room"("id") ON UPDATE CASCADE ON DELETE CASCADE;

CREATE POLICY "Enable insert for authenticated users only" ON "public"."accessory" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."game" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."game_has_accessory" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."game_has_game_type" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."player_group_type" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable read access for all users" ON "public"."accessory" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."challenge" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."game" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."game_audience" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."game_category" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."game_has_accessory" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."game_has_game_type" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."game_type" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."player_group_type" FOR SELECT USING (true);

ALTER TABLE "public"."accessory" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."action_card" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."action_card_settings" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."action_card_settings_has_action_card" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."action_card_state" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."challenge" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."game" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."game_audience" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."game_category" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."game_has_accessory" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."game_has_game_type" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."game_type" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."player" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."player_group_type" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."player_has_room" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."room" ENABLE ROW LEVEL SECURITY;

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."accessory" TO "anon";
GRANT ALL ON TABLE "public"."accessory" TO "authenticated";
GRANT ALL ON TABLE "public"."accessory" TO "service_role";

GRANT ALL ON SEQUENCE "public"."accessory_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."accessory_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."accessory_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."action_card" TO "anon";
GRANT ALL ON TABLE "public"."action_card" TO "authenticated";
GRANT ALL ON TABLE "public"."action_card" TO "service_role";

GRANT ALL ON SEQUENCE "public"."action_card_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."action_card_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."action_card_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."action_card_settings" TO "anon";
GRANT ALL ON TABLE "public"."action_card_settings" TO "authenticated";
GRANT ALL ON TABLE "public"."action_card_settings" TO "service_role";

GRANT ALL ON TABLE "public"."action_card_settings_has_action_card" TO "anon";
GRANT ALL ON TABLE "public"."action_card_settings_has_action_card" TO "authenticated";
GRANT ALL ON TABLE "public"."action_card_settings_has_action_card" TO "service_role";

GRANT ALL ON SEQUENCE "public"."action_card_settings_has_action_card_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."action_card_settings_has_action_card_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."action_card_settings_has_action_card_id_seq" TO "service_role";

GRANT ALL ON SEQUENCE "public"."action_card_settings_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."action_card_settings_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."action_card_settings_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."action_card_state" TO "anon";
GRANT ALL ON TABLE "public"."action_card_state" TO "authenticated";
GRANT ALL ON TABLE "public"."action_card_state" TO "service_role";

GRANT ALL ON SEQUENCE "public"."action_card_state_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."action_card_state_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."action_card_state_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."challenge" TO "anon";
GRANT ALL ON TABLE "public"."challenge" TO "authenticated";
GRANT ALL ON TABLE "public"."challenge" TO "service_role";

GRANT ALL ON SEQUENCE "public"."challenge_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."challenge_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."challenge_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."game" TO "anon";
GRANT ALL ON TABLE "public"."game" TO "authenticated";
GRANT ALL ON TABLE "public"."game" TO "service_role";

GRANT ALL ON TABLE "public"."game_audience" TO "anon";
GRANT ALL ON TABLE "public"."game_audience" TO "authenticated";
GRANT ALL ON TABLE "public"."game_audience" TO "service_role";

GRANT ALL ON SEQUENCE "public"."game_audience_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."game_audience_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."game_audience_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."game_category" TO "anon";
GRANT ALL ON TABLE "public"."game_category" TO "authenticated";
GRANT ALL ON TABLE "public"."game_category" TO "service_role";

GRANT ALL ON SEQUENCE "public"."game_category_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."game_category_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."game_category_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."game_has_accessory" TO "anon";
GRANT ALL ON TABLE "public"."game_has_accessory" TO "authenticated";
GRANT ALL ON TABLE "public"."game_has_accessory" TO "service_role";

GRANT ALL ON SEQUENCE "public"."game_has_accessory_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."game_has_accessory_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."game_has_accessory_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."game_has_game_type" TO "anon";
GRANT ALL ON TABLE "public"."game_has_game_type" TO "authenticated";
GRANT ALL ON TABLE "public"."game_has_game_type" TO "service_role";

GRANT ALL ON SEQUENCE "public"."game_has_game_type_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."game_has_game_type_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."game_has_game_type_id_seq" TO "service_role";

GRANT ALL ON SEQUENCE "public"."game_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."game_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."game_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."game_type" TO "anon";
GRANT ALL ON TABLE "public"."game_type" TO "authenticated";
GRANT ALL ON TABLE "public"."game_type" TO "service_role";

GRANT ALL ON SEQUENCE "public"."game_type_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."game_type_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."game_type_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."player" TO "anon";
GRANT ALL ON TABLE "public"."player" TO "authenticated";
GRANT ALL ON TABLE "public"."player" TO "service_role";

GRANT ALL ON TABLE "public"."player_group_type" TO "anon";
GRANT ALL ON TABLE "public"."player_group_type" TO "authenticated";
GRANT ALL ON TABLE "public"."player_group_type" TO "service_role";

GRANT ALL ON SEQUENCE "public"."player_group_type_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."player_group_type_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."player_group_type_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."player_has_room" TO "anon";
GRANT ALL ON TABLE "public"."player_has_room" TO "authenticated";
GRANT ALL ON TABLE "public"."player_has_room" TO "service_role";

GRANT ALL ON SEQUENCE "public"."player_has_room_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."player_has_room_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."player_has_room_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."random_challenge" TO "anon";
GRANT ALL ON TABLE "public"."random_challenge" TO "authenticated";
GRANT ALL ON TABLE "public"."random_challenge" TO "service_role";

GRANT ALL ON TABLE "public"."room" TO "anon";
GRANT ALL ON TABLE "public"."room" TO "authenticated";
GRANT ALL ON TABLE "public"."room" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
